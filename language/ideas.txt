- named typeclass implementations
  - anonymous as well for "default"
- effects like F*
  - http://www2.imm.dtu.dk/~fnie/Papers/NiNi99tes.pdf
  - https://www.fstar-lang.org/papers/dm4free/
  - https://www.fstar-lang.org/papers/mumon/
- regions/references
  - http://209.68.42.137/ucsd-pages/Courses/cse227.w03/handouts/cyclone-regions.pdf
  - https://www.microsoft.com/en-us/research/publication/uniqueness-and-reference-immutability-for-safe-parallelism
  - http://web.cs.ucla.edu/~palsberg/tba/papers/tofte-talpin-iandc97.pdf

- syntax:
  ```
  func id: (n: s32) -> s32 {
    n
  }

  variant optional: (t: type) -> type {
    some: t,
    none,
  }

  struct point2: (t: type) -> type {
    x: t,
    y: t,
  }

  func array: (t: type, n: usize) -> type = [n]t;
  ```
